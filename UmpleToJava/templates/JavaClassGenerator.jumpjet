<%@ jet package="cruise.umple.compiler.java" class="JavaClassGenerator" imports="cruise.umple.compiler.* cruise.umple.util.* java.util.*" skeleton="generator.skeleton"%>
<%@ include file="UmpleNotice.jet" %>
<%
  UmpleClass uClass = (UmpleClass) uElement;
  globalUmpleClass = uClass;  
  GeneratedClass gClass = uClass.getGeneratedClass();
  JavaGenerator gen = new JavaGenerator();
  gen.setModel(model);
  GeneratorHelper.generator = gen;

  HashMap<String,String> codeInjectionMap = new HashMap<String,String>();
  for (CodeInjection inject : uClass.getCodeInjections())
  {
    String operation = StringFormatter.toUnderscore(inject.getOperation());
    String key = inject.getType() + ":" + operation;
    String newCodeToInject = "";
    String injectCode = inject.getConstraintTree()==null?inject.getCode():inject.getConstraintCode(gen);
    if (codeInjectionMap.containsKey(key))
    {
      newCodeToInject = StringFormatter.format("{0}\n    {1}",codeInjectionMap.get(key),injectCode);
    }
    else
    {
      newCodeToInject = injectCode;
    }
    codeInjectionMap.put(key,newCodeToInject);
  }

  boolean isFirst = true;
%>

<%=gen.translate("packageDefinition",uClass)%>
<%@ include file="import_packages.jet" %>

<% if (uClass.numberOfComments() > 0) { append(stringBuffer, "\n{0}", Comment.format("Javadoc",uClass.getComments())); } %>
<% for (Position p : uClass.getPositions()) { %>
// line <%= p.getLineNumber() %> "<%= ParserUtil.getRelativePath(p,uClass, "Java") %>"
<% } %>
public <% if (uClass.getIsAbstract()) { append(stringBuffer, "{0} ", "abstract"); } %>class <%=uClass.getName()%><%= gen.translate("isA",uClass) %><%

for (StateMachine smq : uClass.getStateMachines())
  {
    if (smq.isQueued())
    {
      append(stringBuffer," implements Runnable");
      break;
    }
    else if(smq.isPooled())
    {
      append(stringBuffer," implements Runnable");
      break;
    }
  }

%>
{
  <%getMemberCode(stringBuffer, model,uClass,gClass,gen,isFirst);
  getConstructorCode(stringBuffer, model,uClass,gClass,gen,isFirst, false);
  getAttributeCode(stringBuffer, model,uClass,gClass,gen,isFirst,false);
  getStateMachine1Code(stringBuffer, model,uClass,gClass,gen,isFirst,false);
  getAssociationCode(stringBuffer, model,uClass,gClass,gen,isFirst,false);
  getEqualsCode(stringBuffer, model,uClass,gClass,gen,isFirst);
  getStateMachine2Code(stringBuffer, model,uClass,gClass,gen,isFirst);
  getDeleteCode(stringBuffer, model,uClass,gClass,gen,isFirst,false);
  getExtraMethodsCode(stringBuffer, model,uClass,gClass,gen,isFirst);
  getAllExtraCode(stringBuffer, model,uClass,gClass,gen,isFirst);
  return stringBuffer.toString();
    } 
    private String getMemberCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst)
  {%>
  <%@ include file="members_AllStatics.jet" %>
  <%@ include file="members_AllAttributes.jet" %>
  <%@ include file="members_AllStateMachines.jet" %>
  <%@ include file="members_AllDoActivities.jet" %>
  <%@ include file="members_AllAssociations.jet" %>
  <%@ include file="members_AllHelpers.jet" %>
  <%return stringBuffer.toString();
    }
  private UmpleClass globalUmpleClass = null;
  public Map<String,UncaughtException> uncaughtExceptions = new HashMap<String,UncaughtException>();
  
    private String getConstructorCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst, boolean isFake)
  {
    Integer baseJavaLine = stringBuffer.toString().split("\\n").length;
    boolean reqSuperCode, reqCommonCode;
    AssociationVariable relatedAssociation;
    Association relatedAssoc;%>

  //------------------------
  // CONSTRUCTOR
  //------------------------

  <%@ include file="constructor_Declare_All.jet" %>
  <%return stringBuffer.toString();
    } 
    private String getAttributeCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst, boolean isFake)
  { 
    String umpleSourceFile = "";
    Integer baseJavaLine = stringBuffer.toString().split("\\n").length;%>

  //------------------------
  // INTERFACE
  //------------------------

  <%@ include file="attribute_Set_All.jet" %>
  <%@ include file="attribute_Get_All.jet" %>
  <%@ include file="attribute_IsBoolean_All.jet" %>
  <%return stringBuffer.toString();
    } 
    private String getStateMachine1Code(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst, boolean isFake)
  {
    Integer baseJavaLine = stringBuffer.toString().split("\\n").length;%>
  <%@ include file="state_machine_Get_All.jet" %>
  <%@ include file="state_machine_Events_All.jet" %>
  <%@ include file="state_machine_Set_All.jet" %><%
    return stringBuffer.toString(); 
  } 
  private String getAssociationCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst, boolean isFake)
  {
    String umpleSourceFile = "";
    Integer baseJavaLine = stringBuffer.toString().split("\\n").length+3;%>
  <%@ include file="association_Get_All.jet" %>
  <%@ include file="association_Set_All.jet" %>
  <%return stringBuffer.toString();
    } 
    
    private String getEqualsCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst)
  {%>
<% if (uClass.getKey().isProvided()) { %>
  <%@ include file="equals.jet" %>
<% } %>
  <%return stringBuffer.toString();
    } 
    private String getStateMachine2Code(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst)
  {%>
  <%@ include file="state_machine_doActivity_All.jet" %>
  <%@ include file="state_machine_timedEvent_All.jet" %>
  <%return stringBuffer.toString();
    } 
    private String getDeleteCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst, boolean isFake)
  {
    Integer baseJavaLine = stringBuffer.toString().split("\\n").length+1; %>
  <%@ include file="delete_All.jet" %>
    <% for (StateMachine smq : uClass.getStateMachines())
     {
       if (smq.isPooled())
       {%>
         <%@ include file="queued_state_machine_inner_class.jet" %>
         <%@ include file="queued_state_machine_queuedEvent.jet" %>
         <%@ include file="queued_state_machine_removalThread_run.jet" %>
       <% break;
       }       
       if (smq.isQueued())
       {%>
         <%@ include file="queued_state_machine_inner_class.jet" %>
         <%@ include file="queued_state_machine_queuedEvent.jet" %>
         <%@ include file="queued_state_machine_removalThread_run.jet" %>
       <% break;
       }
     }%>
  <%return stringBuffer.toString();
    } 
    private String getExtraMethodsCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst)
  {%>
<% if (uClass.hasMethods()) { %>
  <%@ include file="class_MethodDeclaration.jet" %>
<% } %><% 
   boolean matchFound = false;
   UmpleClass parent = uClass.getExtendsClass(); 
   if(uClass.getExtraCode() != null)
   {
     matchFound = java.util.regex.Pattern.compile(".*((public)|(protected)|(private))\\s+(String)\\s+(toString)\\s*\\(\\s*\\).*", java.util.regex.Pattern.DOTALL).matcher(uClass.getExtraCode()).matches();
   }
   if(parent!=null && parent.getExtraCode() != null)
   {
     matchFound = java.util.regex.Pattern.compile(".*((public)|(protected)|(private))\\s+(String)\\s+(toString)\\s*\\(\\s*\\).*", java.util.regex.Pattern.DOTALL).matcher(parent.getExtraCode()).matches();
   }
   if(!matchFound)
   for(Method meth: uClass.getMethods())
   {
     if("toString".equals(meth.getName()))
     {
       matchFound = true;
       break;
     }
   }
   if(!matchFound && parent!=null)
   for(Method meth: parent.getMethods())
   {
     if("toString".equals(meth.getName()))
     {
       matchFound = true;
       break;
     }
   }
   if (uClass.getAttributes().size()>0 && !matchFound){ %>
   <%@ include file="toString_declare.jet" %>
<% } %>
  <%return stringBuffer.toString();
    } 
    private String getAllExtraCode(StringBuffer stringBuffer, UmpleModel model,UmpleClass uClass, GeneratedClass gClass, JavaGenerator gen, boolean isFirst)
  {%>
<% 
  boolean isMainClass = false;
  if (uClass.getExtraCode() != null && uClass.getExtraCode().length() > 0) { %>  
  //------------------------
  // DEVELOPER CODE - PROVIDED AS-IS
  //------------------------
  
  <%=uClass.getExtraCode()%>
  
<% } %>
  <%@ include file="trace.jet" %><%if(uClass!=mainMainClass){%>
}<%}
  return stringBuffer.toString();
}
%><%@ include file="uncaught_exception.jet"%><%
public String endAll(String stringBuffer)
{
  GeneratorHelper.generator = null;
%>