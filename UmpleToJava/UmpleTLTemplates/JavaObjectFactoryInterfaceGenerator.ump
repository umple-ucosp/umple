use UmpleNotice.ump;
use objectFactory_add_Declare_All.ump;

namespace cruise.umple.compiler.java;

external interface ILang{}

class JavaObjectFactoryInterfaceGenerator {
    depend cruise.umple.compiler.*;
    depend cruise.umple.util.*;
    depend java.util.*;
    depend cruise.umple.parser.Position;

    isA ILang;

    // Add a newline to the end of the input
    private void appendln(StringBuilder buffer, String input, Object... variables)
    {
        append(buffer, input + "\n", variables);
    }

    // This method will be used to append formatted strings
    // i.e. format("Hello {0} {1}", "andrew","forward");
    private void append(StringBuilder buffer, String input, Object... variables)
    {
        buffer.append(StringFormatter.format(input,variables));
    }

    emit getCode(UmpleModel model, UmpleElement uElement)(JavaObjectFactoryInterfaceGenerator);


    JavaObjectFactoryInterfaceGenerator <<!<</*JavaObjectFactoryInterfaceGenerator*/>><<@ UmpleToJava.UmpleNotice >>
<<#
  JavaGenerator gen = new JavaGenerator();
  gen.setModel(model);
  GeneratorHelper.generator = gen;
  Boolean isInterface=true;
#>>

import java.rmi.Remote;
import java.rmi.RemoteException;

public interface IUmpleObjectFactory extends Remote
{
  <<@ UmpleToJava.objectFactory_add_Declare_All >>
}
 !>>
}
